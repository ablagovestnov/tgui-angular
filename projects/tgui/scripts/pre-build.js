#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

/**
 * Pre-build —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
 */

const PROJECT_ROOT = path.resolve(__dirname, '..');
const DOCS_DIR = path.join(PROJECT_ROOT, 'docs');

const requiredFiles = [
  'documentation.json',
  'API_REFERENCE.md',
  'API_SCHEMA.json'
];

console.log('üîç Checking documentation files...');

let needsGeneration = false;

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
requiredFiles.forEach(file => {
  const filePath = path.join(DOCS_DIR, file);
  if (!fs.existsSync(filePath)) {
    console.log(`‚ùå Missing: ${file}`);
    needsGeneration = true;
  } else {
    console.log(`‚úÖ Found: ${file}`);
  }
});

if (needsGeneration) {
  console.log('\nüìñ Generating missing documentation files...');
  try {
    execSync('node projects/tgui/scripts/generate-docs.js', { 
      stdio: 'inherit',
      cwd: path.resolve(__dirname, '../../..')
    });
    console.log('‚úÖ Documentation generation completed');
  } catch (error) {
    console.error('‚ùå Failed to generate documentation:', error.message);
    process.exit(1);
  }
} else {
  console.log('‚úÖ All documentation files are present');
} 
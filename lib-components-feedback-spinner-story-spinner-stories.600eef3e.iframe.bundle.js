"use strict";(self.webpackChunktguiangular=self.webpackChunktguiangular||[]).push([[2891],{"./projects/tgui/src/lib/components/feedback/spinner/story/spinner.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Sizes:()=>Sizes,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_spinner_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/tgui/src/lib/components/feedback/spinner/spinner.component.ts"),_angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-CBrzkrmd.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Feedback/Spinner",component:_spinner_component__WEBPACK_IMPORTED_MODULE_1__.t,tags:["autodocs"],decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.MD,_spinner_component__WEBPACK_IMPORTED_MODULE_1__.t]})],argTypes:{size:{options:["s","m","l"],control:{type:"select"},description:"Loading indicator size",defaultValue:"m"}}},Basic={args:{size:"m"},render:args=>({props:args,template:'<tgui-spinner [size]="size"></tgui-spinner>'})},Sizes={render:()=>({styles:["\n      .spinner-container {\n        display: flex;\n        gap: 24px;\n        align-items: center;\n      }\n      .spinner-item {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 8px;\n      }\n      .spinner-label {\n        font-size: 14px;\n        margin-top: 8px;\n      }\n    "],template:'\n      <div class="spinner-container">\n        <div class="spinner-item">\n          <tgui-spinner size="s"></tgui-spinner>\n          <span class="spinner-label">Small (s)</span>\n        </div>\n        <div class="spinner-item">\n          <tgui-spinner size="m"></tgui-spinner>\n          <span class="spinner-label">Medium (m)</span>\n        </div>\n        <div class="spinner-item">\n          <tgui-spinner size="l"></tgui-spinner>\n          <span class="spinner-label">Large (l)</span>\n        </div>\n      </div>\n    '})};Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'm'\n  },\n  render: args => ({\n    props: args,\n    template: `<tgui-spinner [size]=\"size\"></tgui-spinner>`\n  })\n}",...Basic.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    styles: [`\n      .spinner-container {\n        display: flex;\n        gap: 24px;\n        align-items: center;\n      }\n      .spinner-item {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 8px;\n      }\n      .spinner-label {\n        font-size: 14px;\n        margin-top: 8px;\n      }\n    `],\n    template: `\n      <div class="spinner-container">\n        <div class="spinner-item">\n          <tgui-spinner size="s"></tgui-spinner>\n          <span class="spinner-label">Small (s)</span>\n        </div>\n        <div class="spinner-item">\n          <tgui-spinner size="m"></tgui-spinner>\n          <span class="spinner-label">Medium (m)</span>\n        </div>\n        <div class="spinner-item">\n          <tgui-spinner size="l"></tgui-spinner>\n          <span class="spinner-label">Large (l)</span>\n        </div>\n      </div>\n    `\n  })\n}',...Sizes.parameters?.docs?.source}}}}}]);
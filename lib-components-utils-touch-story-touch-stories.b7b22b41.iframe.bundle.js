(self.webpackChunktguiangular=self.webpackChunktguiangular||[]).push([[3521],{"./projects/tgui/src/lib/components/utils/touch/story/touch.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,HorizontalSwipe:()=>HorizontalSwipe,VerticalSwipe:()=>VerticalSwipe,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Utils/Touch",component:__webpack_require__("./projects/tgui/src/lib/components/utils/touch/touch.component.ts").d,tags:["autodocs"],argTypes:{usePointerHover:{control:"boolean",description:"Use pointer events for hover instead of mouse events",defaultValue:!1},useCapture:{control:"boolean",description:"Use capture phase for events",defaultValue:!1},slideThreshold:{control:{type:"number",min:1,max:50},description:"Threshold in pixels before a touch is considered a slide",defaultValue:5},noSlideClick:{control:"boolean",description:"Prevent clicks after a slide is detected",defaultValue:!1},stopPropagation:{control:"boolean",description:"Stop event propagation",defaultValue:!1}},parameters:{docs:{description:{component:"\nA component for handling touch and gesture events.\nThis component helps in handling swipe gestures and detecting various touch interactions.\nIt's especially useful for implementing custom touch behaviors like swipeable lists, carousels, etc.\n        "}}}},Basic={render:()=>({props:{lastEvent:(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.signal)("No events yet"),onStart(event){this.lastEvent.set(`Start - X: ${event.startX}, Y: ${event.startY}`)},onMove(event){this.lastEvent.set(`Move - Shift X: ${event.shiftX}, Shift Y: ${event.shiftY}`)},onEnd(event){this.lastEvent.set(`End - Duration: ${event.duration}ms`)}},template:'\n      <div style="width: 100%; padding: 16px;">\n        <h3>Touch Component Demo</h3>\n        \n        <div>\n          <tgui-touch\n            [usePointerHover]="usePointerHover"\n            [useCapture]="useCapture"\n            [slideThreshold]="slideThreshold"\n            [noSlideClick]="noSlideClick"\n            [stopPropagation]="stopPropagation"\n            (onStart)="onStart($event)"\n            (onMove)="onMove($event)"\n            (onEnd)="onEnd($event)"\n            style="display: block; width: 100%; height: 200px; background-color: #f0f0f0; border-radius: 8px; display: flex; align-items: center; justify-content: center; user-select: none; touch-action: manipulation;"\n          >\n            <div style="text-align: center;">\n              Touch or swipe here\n            </div>\n          </tgui-touch>\n        </div>\n        \n        <div style="margin-top: 16px; padding: 8px; background-color: #eee; border-radius: 4px;">\n          <strong>Last Event:</strong> {{ lastEvent() }}\n        </div>\n      </div>\n    '})},HorizontalSwipe={render:()=>{let startPosition=0;return{props:{swipePosition:(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.signal)(0),onStart(event){startPosition=event.startX},onMoveX(event){const shift=Math.min(Math.max(-100,event.shiftX),100);this.swipePosition.set(shift)}},template:'\n        <div style="width: 100%; padding: 16px;">\n          <h3>Horizontal Swipe Demo</h3>\n          \n          <div style="position: relative; overflow: hidden; width: 100%; height: 100px; background-color: #e0e0e0; border-radius: 8px;">\n            <tgui-touch\n              [slideThreshold]="5"\n              (onStart)="onStart($event)"\n              (onMoveX)="onMoveX($event)"\n              style="display: block; width: 100%; height: 100%; touch-action: pan-y;"\n            >\n              <div \n                style="position: absolute; top: 0; left: 50%; transform: translateX(-50%); width: 80px; height: 80px; margin: 10px; background-color: #2196F3; border-radius: 8px; display: flex; align-items: center; justify-content: center; color: white; user-select: none;"\n                [style.transform]="\'translateX(\' + swipePosition() + \'px)\'">\n                Swipe me\n              </div>\n            </tgui-touch>\n          </div>\n          \n          <div style="margin-top: 16px; text-align: center;">\n            <small>Swipe the blue box left and right</small>\n          </div>\n        </div>\n      '}}},VerticalSwipe={render:()=>{let startPosition=0;return{props:{swipePosition:(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.signal)(0),onStart(event){startPosition=event.startY},onMoveY(event){const shift=Math.min(Math.max(-50,event.shiftY),50);this.swipePosition.set(shift)}},template:'\n        <div style="width: 100%; padding: 16px;">\n          <h3>Vertical Swipe Demo</h3>\n          \n          <div style="position: relative; overflow: hidden; width: 100%; height: 200px; background-color: #e0e0e0; border-radius: 8px;">\n            <tgui-touch\n              [slideThreshold]="5"\n              (onStart)="onStart($event)"\n              (onMoveY)="onMoveY($event)"\n              style="display: block; width: 100%; height: 100%; touch-action: pan-x;"\n            >\n              <div \n                style="position: absolute; left: 50%; transform: translateX(-50%); top: 60px; width: 80px; height: 80px; background-color: #4CAF50; border-radius: 8px; display: flex; align-items: center; justify-content: center; color: white; user-select: none;"\n                [style.transform]="\'translateY(\' + swipePosition() + \'px)\'">\n                Swipe me\n              </div>\n            </tgui-touch>\n          </div>\n          \n          <div style="margin-top: 16px; text-align: center;">\n            <small>Swipe the green box up and down</small>\n          </div>\n        </div>\n      '}}},__namedExportsOrder=["Basic","HorizontalSwipe","VerticalSwipe"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    props: {\n      lastEvent: signal<string>(\'No events yet\'),\n      onStart(event: TouchEvent): void {\n        (this as unknown as StoryComponentProps).lastEvent.set(`Start - X: ${event.startX}, Y: ${event.startY}`);\n      },\n      onMove(event: TouchEvent): void {\n        (this as unknown as StoryComponentProps).lastEvent.set(`Move - Shift X: ${event.shiftX}, Shift Y: ${event.shiftY}`);\n      },\n      onEnd(event: TouchEvent): void {\n        (this as unknown as StoryComponentProps).lastEvent.set(`End - Duration: ${event.duration}ms`);\n      }\n    },\n    template: `\n      <div style="width: 100%; padding: 16px;">\n        <h3>Touch Component Demo</h3>\n        \n        <div>\n          <tgui-touch\n            [usePointerHover]="usePointerHover"\n            [useCapture]="useCapture"\n            [slideThreshold]="slideThreshold"\n            [noSlideClick]="noSlideClick"\n            [stopPropagation]="stopPropagation"\n            (onStart)="onStart($event)"\n            (onMove)="onMove($event)"\n            (onEnd)="onEnd($event)"\n            style="display: block; width: 100%; height: 200px; background-color: #f0f0f0; border-radius: 8px; display: flex; align-items: center; justify-content: center; user-select: none; touch-action: manipulation;"\n          >\n            <div style="text-align: center;">\n              Touch or swipe here\n            </div>\n          </tgui-touch>\n        </div>\n        \n        <div style="margin-top: 16px; padding: 8px; background-color: #eee; border-radius: 4px;">\n          <strong>Last Event:</strong> {{ lastEvent() }}\n        </div>\n      </div>\n    `\n  })\n}',...Basic.parameters?.docs?.source}}},HorizontalSwipe.parameters={...HorizontalSwipe.parameters,docs:{...HorizontalSwipe.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    let startPosition = 0;\n    return {\n      props: {\n        swipePosition: signal<number>(0),\n        onStart(event: TouchEvent): void {\n          startPosition = event.startX;\n        },\n        onMoveX(event: TouchEvent): void {\n          const shift = Math.min(Math.max(-100, event.shiftX), 100);\n          (this as unknown as StoryComponentProps).swipePosition.set(shift);\n        }\n      },\n      template: `\n        <div style="width: 100%; padding: 16px;">\n          <h3>Horizontal Swipe Demo</h3>\n          \n          <div style="position: relative; overflow: hidden; width: 100%; height: 100px; background-color: #e0e0e0; border-radius: 8px;">\n            <tgui-touch\n              [slideThreshold]="5"\n              (onStart)="onStart($event)"\n              (onMoveX)="onMoveX($event)"\n              style="display: block; width: 100%; height: 100%; touch-action: pan-y;"\n            >\n              <div \n                style="position: absolute; top: 0; left: 50%; transform: translateX(-50%); width: 80px; height: 80px; margin: 10px; background-color: #2196F3; border-radius: 8px; display: flex; align-items: center; justify-content: center; color: white; user-select: none;"\n                [style.transform]="\'translateX(\' + swipePosition() + \'px)\'">\n                Swipe me\n              </div>\n            </tgui-touch>\n          </div>\n          \n          <div style="margin-top: 16px; text-align: center;">\n            <small>Swipe the blue box left and right</small>\n          </div>\n        </div>\n      `\n    };\n  }\n}',...HorizontalSwipe.parameters?.docs?.source}}},VerticalSwipe.parameters={...VerticalSwipe.parameters,docs:{...VerticalSwipe.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    let startPosition = 0;\n    return {\n      props: {\n        swipePosition: signal<number>(0),\n        onStart(event: TouchEvent): void {\n          startPosition = event.startY;\n        },\n        onMoveY(event: TouchEvent): void {\n          const shift = Math.min(Math.max(-50, event.shiftY), 50);\n          (this as unknown as StoryComponentProps).swipePosition.set(shift);\n        }\n      },\n      template: `\n        <div style="width: 100%; padding: 16px;">\n          <h3>Vertical Swipe Demo</h3>\n          \n          <div style="position: relative; overflow: hidden; width: 100%; height: 200px; background-color: #e0e0e0; border-radius: 8px;">\n            <tgui-touch\n              [slideThreshold]="5"\n              (onStart)="onStart($event)"\n              (onMoveY)="onMoveY($event)"\n              style="display: block; width: 100%; height: 100%; touch-action: pan-x;"\n            >\n              <div \n                style="position: absolute; left: 50%; transform: translateX(-50%); top: 60px; width: 80px; height: 80px; background-color: #4CAF50; border-radius: 8px; display: flex; align-items: center; justify-content: center; color: white; user-select: none;"\n                [style.transform]="\'translateY(\' + swipePosition() + \'px)\'">\n                Swipe me\n              </div>\n            </tgui-touch>\n          </div>\n          \n          <div style="margin-top: 16px; text-align: center;">\n            <small>Swipe the green box up and down</small>\n          </div>\n        </div>\n      `\n    };\n  }\n}',...VerticalSwipe.parameters?.docs?.source}}}},"./projects/tgui/src/lib/components/utils/touch/touch.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{d:()=>TouchComponent});var tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_Users_ablagovestnov_CursorProjects_TGUIAngular_projects_tgui_src_lib_components_utils_touch_touch_component_ts_css_ngResource_Users_ablagovestnov_CursorProjects_TGUIAngular_node_modules_ngtools_webpack_src_loaders_inline_resource_js_data_CiAgICA6aG9zdCB7CiAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uOwogICAgfQogIA_3D_3D_Users_ablagovestnov_CursorProjects_TGUIAngular_projects_tgui_src_lib_components_utils_touch_touch_component_ts__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./projects/tgui/src/lib/components/utils/touch/touch.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICA6aG9zdCB7CiAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uOwogICAgfQogIA%3D%3D!./projects/tgui/src/lib/components/utils/touch/touch.component.ts"),_Users_ablagovestnov_CursorProjects_TGUIAngular_projects_tgui_src_lib_components_utils_touch_touch_component_ts_css_ngResource_Users_ablagovestnov_CursorProjects_TGUIAngular_node_modules_ngtools_webpack_src_loaders_inline_resource_js_data_CiAgICA6aG9zdCB7CiAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uOwogICAgfQogIA_3D_3D_Users_ablagovestnov_CursorProjects_TGUIAngular_projects_tgui_src_lib_components_utils_touch_touch_component_ts__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_Users_ablagovestnov_CursorProjects_TGUIAngular_projects_tgui_src_lib_components_utils_touch_touch_component_ts_css_ngResource_Users_ablagovestnov_CursorProjects_TGUIAngular_node_modules_ngtools_webpack_src_loaders_inline_resource_js_data_CiAgICA6aG9zdCB7CiAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uOwogICAgfQogIA_3D_3D_Users_ablagovestnov_CursorProjects_TGUIAngular_projects_tgui_src_lib_components_utils_touch_touch_component_ts__WEBPACK_IMPORTED_MODULE_3__),_angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-CBrzkrmd.mjs");let TouchComponent=class TouchComponent{elementRef=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef);renderer=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2);usePointerHover=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.input)(!1);useCapture=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.input)(!1);slideThreshold=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.input)(5);noSlideClick=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.input)(!1);stopPropagation=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.input)(!1);onEnter=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.output)();onLeave=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.output)();onStart=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.output)();onStartX=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.output)();onStartY=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.output)();onMove=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.output)();onMoveX=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.output)();onMoveY=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.output)();onEnd=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.output)();onEndX=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.output)();onEndY=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.output)();gesture=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.signal)(null);didSlide=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.signal)(!1);supportedEvents=this.getSupportedEvents();permanentUnlisteners=[];moveEndUnlisteners=[];touchEnabled(){return"undefined"!=typeof window&&"ontouchstart"in window}getSupportedEvents(){return this.touchEnabled()?["touchstart","touchmove","touchend","touchcancel"]:["mousedown","mousemove","mouseup","mouseleave"]}initGesture(startX,startY){return{startX,startY,startT:new Date,duration:0,isPressed:!0,isY:!1,isX:!1,isSlideX:!1,isSlideY:!1,isSlide:!1,clientX:0,clientY:0,shiftX:0,shiftY:0,shiftXAbs:0,shiftYAbs:0}}coordX(e){return null!=e.clientX?e.clientX:e.changedTouches?.[0]?.clientX||0}coordY(e){return null!=e.clientY?e.clientY:e.changedTouches?.[0]?.clientY||0}ngOnInit(){this.setupListeners()}ngOnDestroy(){this.removeAllListeners()}setupListeners(){this.usePointerHover()&&(this.addPermanentEventListener(this.usePointerHover()?"pointerenter":"mouseenter",(e=>this.handleHoverEnter(e))),this.addPermanentEventListener(this.usePointerHover()?"pointerleave":"mouseleave",(e=>this.handleHoverLeave(e)))),this.addPermanentEventListener(this.supportedEvents[0],(e=>this.handleStart(e)))}handleStart(e){const newGesture=this.initGesture(this.coordX(e),this.coordY(e));this.gesture.set(newGesture),this.handleGestureEvent(e,[this.onStart,this.onStartX,this.onStartY]);const targetElement=this.touchEnabled()?e.target:window.document;this.addDocumentEventListeners(targetElement)}addDocumentEventListeners(target){const moveListener=this.renderer.listen(target,this.supportedEvents[1],(e=>this.handleMove(e))),endListener=this.renderer.listen(target,this.supportedEvents[2],(e=>this.handleEnd(e))),cancelListener=this.renderer.listen(target,this.supportedEvents[3],(e=>this.handleEnd(e)));this.moveEndUnlisteners.push(moveListener,endListener,cancelListener)}handleMove(e){const currentGesture=this.gesture();if(!currentGesture?.isPressed)return;const{isPressed,isX,isY,startX=0,startY=0}=currentGesture;if(isPressed){const clientX=this.coordX(e),clientY=this.coordY(e),shiftX=clientX-startX,shiftY=clientY-startY,shiftXAbs=Math.abs(shiftX),shiftYAbs=Math.abs(shiftY);if(e.touches&&e.touches.length>1)return void this.handleEnd(e);if(!isX&&!isY){const willBeX=shiftXAbs>=this.slideThreshold()&&shiftXAbs>shiftYAbs,willBeY=shiftYAbs>=this.slideThreshold()&&shiftYAbs>shiftXAbs,willBeSlidedX=willBeX&&this.hasListeners(this.onMoveX)||this.hasListeners(this.onMove),willBeSlidedY=willBeY&&this.hasListeners(this.onMoveY)||this.hasListeners(this.onMove);this.gesture.update((g=>g?{...g,isY:willBeY,isX:willBeX,isSlideX:willBeSlidedX,isSlideY:willBeSlidedY,isSlide:willBeSlidedX||willBeSlidedY}:g))}const updatedGesture=this.gesture();updatedGesture?.isSlide&&(this.gesture.update((g=>g?{...g,clientX,clientY,shiftX,shiftY,shiftXAbs,shiftYAbs}:g)),this.handleGestureEvent(e,[this.onMove,updatedGesture.isSlideX?this.onMoveX:null,updatedGesture.isSlideY?this.onMoveY:null]))}}hasListeners(emitter){return!0}handleEnd(e){const currentGesture=this.gesture(),{isPressed,isSlide,isSlideX,isSlideY}=currentGesture||{};isPressed&&this.handleGestureEvent(e,[this.onEnd,isSlideY?this.onEndY:null,isSlideX?this.onEndX:null]),this.touchEnabled()&&isSlide?this.didSlide.set(!1):this.didSlide.set(Boolean(isSlide)),this.gesture.set({}),this.touchEnabled()&&this.hasListeners(this.onLeave)&&this.onLeave.emit(e),this.removeMoveEndListeners()}handleHoverEnter(e){this.hasListeners(this.onEnter)&&this.onEnter.emit(e)}handleHoverLeave(e){this.hasListeners(this.onLeave)&&this.onLeave.emit(e)}handleGestureEvent(e,handlers){this.stopPropagation()&&e.stopPropagation(),handlers.forEach((emitter=>{if(!emitter||!this.hasListeners(emitter))return;const currentGesture=this.gesture();if(!currentGesture)return;const duration=Date.now()-(currentGesture.startT?.getTime()??0),touchEvent={startX:currentGesture.startX??0,startY:currentGesture.startY??0,startT:currentGesture.startT??new Date,duration,isPressed:currentGesture.isPressed??!1,isY:currentGesture.isY??!1,isX:currentGesture.isX??!1,isSlideX:currentGesture.isSlideX??!1,isSlideY:currentGesture.isSlideY??!1,isSlide:currentGesture.isSlide??!1,clientX:currentGesture.clientX??0,clientY:currentGesture.clientY??0,shiftX:currentGesture.shiftX??0,shiftY:currentGesture.shiftY??0,shiftXAbs:currentGesture.shiftXAbs??0,shiftYAbs:currentGesture.shiftYAbs??0,originalEvent:e};emitter.emit(touchEvent)}))}addPermanentEventListener(eventName,handler){const unlistener=this.renderer.listen(this.elementRef.nativeElement,eventName,(e=>handler(e)));this.permanentUnlisteners.push(unlistener)}removeMoveEndListeners(){this.moveEndUnlisteners.forEach((unlisten=>unlisten())),this.moveEndUnlisteners=[]}removeAllListeners(){this.removeMoveEndListeners(),this.permanentUnlisteners.forEach((unlisten=>unlisten())),this.permanentUnlisteners=[]}onClick(e){this.didSlide()&&(this.noSlideClick()&&(e.stopPropagation(),e.preventDefault()),this.didSlide.set(!1))}onDragStart(e){const target=e.target;"A"!==target.tagName&&"IMG"!==target.tagName||e.preventDefault()}static propDecorators={usePointerHover:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,args:[{isSignal:!0,alias:"usePointerHover",required:!1,transform:void 0}]}],useCapture:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,args:[{isSignal:!0,alias:"useCapture",required:!1,transform:void 0}]}],slideThreshold:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,args:[{isSignal:!0,alias:"slideThreshold",required:!1,transform:void 0}]}],noSlideClick:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,args:[{isSignal:!0,alias:"noSlideClick",required:!1,transform:void 0}]}],stopPropagation:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,args:[{isSignal:!0,alias:"stopPropagation",required:!1,transform:void 0}]}],onEnter:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,args:["onEnter"]}],onLeave:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,args:["onLeave"]}],onStart:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,args:["onStart"]}],onStartX:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,args:["onStartX"]}],onStartY:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,args:["onStartY"]}],onMove:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,args:["onMove"]}],onMoveX:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,args:["onMoveX"]}],onMoveY:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,args:["onMoveY"]}],onEnd:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,args:["onEnd"]}],onEndX:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,args:["onEndX"]}],onEndY:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,args:["onEndY"]}],onClick:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener,args:["click",["$event"]]}],onDragStart:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener,args:["dragstart",["$event"]]}]}};TouchComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Component)({selector:"tgui-touch",standalone:!0,imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.MD],template:"<ng-content></ng-content>",encapsulation:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.Emulated,changeDetection:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,schemas:[_angular_core__WEBPACK_IMPORTED_MODULE_0__.CUSTOM_ELEMENTS_SCHEMA],styles:[_Users_ablagovestnov_CursorProjects_TGUIAngular_projects_tgui_src_lib_components_utils_touch_touch_component_ts_css_ngResource_Users_ablagovestnov_CursorProjects_TGUIAngular_node_modules_ngtools_webpack_src_loaders_inline_resource_js_data_CiAgICA6aG9zdCB7CiAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uOwogICAgfQogIA_3D_3D_Users_ablagovestnov_CursorProjects_TGUIAngular_projects_tgui_src_lib_components_utils_touch_touch_component_ts__WEBPACK_IMPORTED_MODULE_3___default()]})],TouchComponent)},"./projects/tgui/src/lib/components/utils/touch/touch.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICA6aG9zdCB7CiAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uOwogICAgfQogIA%3D%3D!./projects/tgui/src/lib/components/utils/touch/touch.component.ts":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"\n    :host {\n      display: block;\n      position: relative;\n      touch-action: manipulation;\n    }\n  ",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);
(self.webpackChunktguiangular=self.webpackChunktguiangular||[]).push([[7182],{"./projects/tgui/src/lib/components/blocks/card/card.component.css?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".tgui-card {\n  display: block;\n  --tgui-card-border-radius: 24px;\n  border-radius: var(--tgui-card-border-radius);\n}\n\n.tgui-card__wrapper {\n  position: relative;\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0;\n  isolation: isolate;\n  background: #FFFFFF;\n  /* Card Shadow */\n  box-shadow: 0px 0px 2px 1px rgba(0, 0, 0, 0.02), 0px 32px 64px rgba(0, 0, 0, 0.04);\n  border-radius: var(--tgui-card-border-radius);\n  width: 100%;\n  overflow: hidden;\n}\n\n.tgui-card__image {\n  width: 100%;\n  background-color: #F4F4F7;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.tgui-card--plain .tgui-card__wrapper {\n  background: #FFFFFF;\n}\n\n.tgui-card--ambient .tgui-card__wrapper {\n  background: linear-gradient(0deg, #212121, #212121), rgba(0, 0, 0, 0.8);\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: center;\n} ",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/tgui/src/lib/components/blocks/card/card.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{i:()=>CardComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var card_componentngResource=__webpack_require__("./projects/tgui/src/lib/components/blocks/card/card.component.css?ngResource"),card_componentngResource_default=__webpack_require__.n(card_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common_module_CBrzkrmd=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-CBrzkrmd.mjs"),card_cell_component=__webpack_require__("./projects/tgui/src/lib/components/blocks/card/components/card-cell/card-cell.component.ts");let CardComponent=class CardComponent{elementRef;type="plain";set borderRadius(value){this._borderRadius=value,this.updateCustomStyle()}get borderRadius(){return this._borderRadius}image;imageAlt="";imageHeight="200px";customStyle={};imageStyle={};cardCells;_borderRadius="24px";constructor(elementRef){this.elementRef=elementRef,this.updateCustomStyle()}ngAfterContentInit(){this.updateImageStyle()}get className(){return`tgui-card tgui-card--${this.type}`}updateCustomStyle(){this.customStyle={"border-radius":this._borderRadius},this.elementRef.nativeElement.style.setProperty("--tgui-card-border-radius",this._borderRadius),this.updateImageStyle()}updateImageStyle(){this.image&&(this.imageStyle={height:this.imageHeight,"background-image":`url(${this.image})`,"background-size":"cover","background-position":"center","border-top-left-radius":this._borderRadius,"border-top-right-radius":this._borderRadius,overflow:"hidden"})}get hasImage(){return!!this.image}static ctorParameters=()=>[{type:core.ElementRef}];static propDecorators={type:[{type:core.Input}],borderRadius:[{type:core.Input}],image:[{type:core.Input}],imageAlt:[{type:core.Input}],imageHeight:[{type:core.Input}],cardCells:[{type:core.ContentChildren,args:[card_cell_component.A]}],className:[{type:core.HostBinding,args:["class"]}]}};CardComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"tgui-card",template:'<article class="tgui-card__wrapper" [ngStyle]="customStyle">\n  \x3c!-- Image, if provided --\x3e\n  <div *ngIf="hasImage" class="tgui-card__image" [ngStyle]="imageStyle">\n    <img *ngIf="false" [src]="image" [alt]="imageAlt"> \x3c!-- Hidden for accessibility --\x3e\n  </div>\n  \n  \x3c!-- Card content --\x3e\n  <ng-content></ng-content>\n</article> ',standalone:!0,imports:[common_module_CBrzkrmd.MD],exportAs:"tguiCard",styles:[card_componentngResource_default()]})],CardComponent)},"./projects/tgui/src/lib/components/blocks/card/components/card-cell/card-cell.component.css?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".tgui-card-cell {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n}\n\n.tgui-card-cell__content {\n  padding: 16px 20px 20px;\n  gap: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.tgui-card-cell--image .tgui-card-cell__content {\n  padding: 0;\n  height: 100%;\n}\n\n.tgui-card__wrapper .tgui-card-cell--image:first-child .tgui-card-cell__content {\n  border-top-left-radius: var(--tgui-card-border-radius, 24px);\n  border-top-right-radius: var(--tgui-card-border-radius, 24px);\n  overflow: hidden;\n}\n\n.tgui-card-cell__text {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 4px;\n  margin-bottom: 8px;\n}\n\n.tgui-card-cell__header {\n  margin: 0;\n  font-family: var(--tgui--font_family, 'SF Pro', sans-serif);\n  font-weight: var(--tgui--font_weight--accent2, 590);\n  font-size: 17px;\n  line-height: 22px;\n  letter-spacing: -0.4px;\n  color: var(--tgui--plain_foreground, #000000);\n}\n\n.tgui-card--ambient .tgui-card-cell__header {\n  color: #FFFFFF;\n  text-shadow: 0px 4px 16px rgba(0, 0, 0, 0.75);\n}\n\n.tgui-card-cell__subtitle {\n  margin: 0;\n  font-family: var(--tgui--font_family, 'SF Pro', sans-serif);\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 20px;\n  letter-spacing: -0.23px;\n  color: var(--tgui--secondary_hint_color, #707579);\n}\n\n.tgui-card--ambient .tgui-card-cell__subtitle {\n  color: rgba(255, 255, 255, 0.75);\n  text-shadow: 0px 4px 16px rgba(0, 0, 0, 0.75);\n}\n\n.tgui-card-cell--image {\n  background: #F4F4F7;\n  height: 200px;\n  flex-grow: 1;\n  align-self: stretch;\n  padding: 0;\n}\n\n.tgui-card__wrapper .tgui-card-cell--image:first-child {\n  border-top-left-radius: var(--tgui-card-border-radius, 24px);\n  border-top-right-radius: var(--tgui-card-border-radius, 24px);\n  overflow: hidden;\n} ",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/tgui/src/lib/components/blocks/card/components/card-cell/card-cell.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>CardCellComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var card_cell_componentngResource=__webpack_require__("./projects/tgui/src/lib/components/blocks/card/components/card-cell/card-cell.component.css?ngResource"),card_cell_componentngResource_default=__webpack_require__.n(card_cell_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common_module_CBrzkrmd=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-CBrzkrmd.mjs");let CardCellComponent=class CardCellComponent{isImage=!1;header;subtitle;get className(){return this.isImage?"tgui-card-cell tgui-card-cell--image":"tgui-card-cell"}static propDecorators={isImage:[{type:core.Input}],header:[{type:core.Input}],subtitle:[{type:core.Input}],className:[{type:core.HostBinding,args:["class"]}]}};CardCellComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"tgui-card-cell",template:'<div class="tgui-card-cell__content">\n  <div *ngIf="header || subtitle" class="tgui-card-cell__text">\n    <h3 *ngIf="header" class="tgui-card-cell__header">{{ header }}</h3>\n    <p *ngIf="subtitle" class="tgui-card-cell__subtitle">{{ subtitle }}</p>\n  </div>\n  <ng-content></ng-content>\n</div> ',standalone:!0,imports:[common_module_CBrzkrmd.MD],exportAs:"tguiCardCell",styles:[card_cell_componentngResource_default()]})],CardCellComponent)},"./projects/tgui/src/lib/components/blocks/card/components/card-chip/card-chip.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAudGd1aS1jYXJkLWNoaXBfX2NvbnRhaW5lciB7CiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgcmlnaHQ6IDE2cHg7CiAgICAgIHRvcDogMTZweDsKICAgICAgei1pbmRleDogMTsKICAgIH0KICA%3D!./projects/tgui/src/lib/components/blocks/card/components/card-chip/card-chip.component.ts":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"\n    .tgui-card-chip__container {\n      position: absolute;\n      right: 16px;\n      top: 16px;\n      z-index: 1;\n    }\n  ",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/tgui/src/lib/components/blocks/card/story/card.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Ambient:()=>Ambient,CustomBorderRadius:()=>CustomBorderRadius,Default:()=>Default,WithAdvancedChip:()=>WithAdvancedChip,WithChip:()=>WithChip,WithDirectImage:()=>WithDirectImage,WithDirectImageAndChip:()=>WithDirectImageAndChip,__namedExportsOrder:()=>__namedExportsOrder,default:()=>card_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),card_component=__webpack_require__("./projects/tgui/src/lib/components/blocks/card/card.component.ts"),card_cell_component=__webpack_require__("./projects/tgui/src/lib/components/blocks/card/components/card-cell/card-cell.component.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),card_chip_component=__webpack_require__("./projects/tgui/src/lib/components/blocks/card/components/card-chip/card-chip.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAudGd1aS1jYXJkLWNoaXBfX2NvbnRhaW5lciB7CiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgcmlnaHQ6IDE2cHg7CiAgICAgIHRvcDogMTZweDsKICAgICAgei1pbmRleDogMTsKICAgIH0KICA%3D!./projects/tgui/src/lib/components/blocks/card/components/card-chip/card-chip.component.ts"),card_chip_component_default=__webpack_require__.n(card_chip_component),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common_module_CBrzkrmd=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-CBrzkrmd.mjs"),chip_component=__webpack_require__("./projects/tgui/src/lib/components/form/chip/chip.component.ts");let CardChipComponent=class CardChipComponent{mode="elevated";before;after;chipClassName="";className="tgui-card-chip";static propDecorators={mode:[{type:core.Input}],before:[{type:core.Input}],after:[{type:core.Input}],chipClassName:[{type:core.Input}],className:[{type:core.HostBinding,args:["class"]}]}};CardChipComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"tgui-card-chip",template:'\n    <div class="tgui-card-chip__container">\n      <tgui-chip [mode]="mode" [before]="before" [after]="after" [className]="chipClassName">\n        <ng-content></ng-content>\n      </tgui-chip>\n    </div>\n  ',standalone:!0,imports:[common_module_CBrzkrmd.MD,chip_component.w],exportAs:"tguiCardChip",styles:[card_chip_component_default()]})],CardChipComponent);const card_stories={title:"Blocks/Card",component:card_component.i,tags:["autodocs"],decorators:[(0,dist.moduleMetadata)({imports:[card_component.i,card_cell_component.A,CardChipComponent]})],argTypes:{type:{options:["plain","ambient"],control:{type:"radio"},description:"Defines the visual style of the card",table:{type:{summary:"string"},defaultValue:{summary:"plain"}}},borderRadius:{control:{type:"text"},description:"Defines the border radius of the card",table:{type:{summary:"string"},defaultValue:{summary:"24px"}}},image:{control:{type:"text"},description:"URL of the image to display at the top of the card",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},imageHeight:{control:{type:"text"},description:"Height of the image section",table:{type:{summary:"string"},defaultValue:{summary:"200px"}}}},args:{type:"plain",borderRadius:"24px",imageHeight:"200px"}},Default={render:args=>({props:args,template:'\n      <tgui-card [type]="type" [borderRadius]="borderRadius" style="width: 300px;">\n        <tgui-card-cell [isImage]="true">\n          <div style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; color: #707579;">\n            Image content goes here\n          </div>\n        </tgui-card-cell>\n        <tgui-card-cell\n          header="Card Title"\n          subtitle="Card description text would go here to provide more information about this card.">\n          <div style="margin-top: 10px; color: #707579;">\n            Additional content can be added here\n          </div>\n        </tgui-card-cell>\n      </tgui-card>\n    '})},WithDirectImage={args:{image:"https://via.placeholder.com/300x200"},render:args=>({props:args,template:'\n      <tgui-card \n        [type]="type" \n        [borderRadius]="borderRadius" \n        [image]="image" \n        [imageHeight]="imageHeight"\n        style="width: 300px;">\n        <tgui-card-cell\n          header="Direct Image Card"\n          subtitle="This card uses the image property directly on the card without a separate cell.">\n          <div style="margin-top: 10px; color: #707579;">\n            This approach is more similar to the React implementation.\n          </div>\n        </tgui-card-cell>\n      </tgui-card>\n    '})},WithChip={render:args=>({props:args,template:'\n      <tgui-card [type]="type" [borderRadius]="borderRadius" style="width: 300px; position: relative;">\n        <tgui-card-chip mode="elevated">\n          <span>New</span>\n        </tgui-card-chip>\n        <tgui-card-cell [isImage]="true">\n          <div style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; color: #707579;">\n            Image content goes here\n          </div>\n        </tgui-card-cell>\n        <tgui-card-cell\n          header="Card with Chip"\n          subtitle="This card includes a chip component positioned in the top-right corner.">\n        </tgui-card-cell>\n      </tgui-card>\n    '})},WithDirectImageAndChip={args:{image:"https://via.placeholder.com/300x200"},render:args=>({props:args,template:'\n      <tgui-card \n        [type]="type" \n        [borderRadius]="borderRadius" \n        [image]="image" \n        [imageHeight]="imageHeight"\n        style="width: 300px; position: relative;">\n        <tgui-card-chip mode="elevated">\n          <span>New</span>\n        </tgui-card-chip>\n        <tgui-card-cell\n          header="Direct Image with Chip"\n          subtitle="This card combines the direct image approach with a chip.">\n        </tgui-card-cell>\n      </tgui-card>\n    '})},WithAdvancedChip={render:args=>({props:{...args,beforeIcon:'\n        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n          <path d="M8 3.5V12.5M3.5 8H12.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" />\n        </svg>\n      '},template:'\n      <tgui-card [type]="type" [borderRadius]="borderRadius" style="width: 300px; position: relative;">\n        <tgui-card-chip [mode]="\'mono\'" [before]="beforeTemplate">\n          Featured\n        </tgui-card-chip>\n        <tgui-card-cell [isImage]="true">\n          <div style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; color: #707579;">\n            Image content goes here\n          </div>\n        </tgui-card-cell>\n        <tgui-card-cell\n          header="Advanced Chip"\n          subtitle="This card uses a chip with an icon and styling.">\n        </tgui-card-cell>\n\n        <ng-template #beforeTemplate>\n          <div [innerHTML]="beforeIcon"></div>\n        </ng-template>\n      </tgui-card>\n    '})},CustomBorderRadius={args:{borderRadius:"8px"},render:args=>({props:args,template:'\n      <tgui-card [type]="type" [borderRadius]="borderRadius" style="width: 300px; position: relative;">\n        <tgui-card-cell [isImage]="true">\n          <div style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; color: #707579;">\n            Image with custom border radius\n          </div>\n        </tgui-card-cell>\n        <tgui-card-cell\n          header="Custom Border Radius"\n          subtitle="This card uses a custom border radius of 8px instead of the default 24px.">\n        </tgui-card-cell>\n      </tgui-card>\n    '})},Ambient={args:{type:"ambient"},render:args=>({props:args,template:'\n      <tgui-card [type]="type" [borderRadius]="borderRadius" style="width: 300px;">\n        <tgui-card-cell\n          header="Ambient Card"\n          subtitle="This card uses the ambient style with a dark background.">\n          <div style="margin-top: 12px; color: rgba(255, 255, 255, 0.5);">\n            Additional content with lower opacity text\n          </div>\n        </tgui-card-cell>\n      </tgui-card>\n    '})},__namedExportsOrder=["Default","WithDirectImage","WithChip","WithDirectImageAndChip","WithAdvancedChip","CustomBorderRadius","Ambient"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-card [type]="type" [borderRadius]="borderRadius" style="width: 300px;">\n        <tgui-card-cell [isImage]="true">\n          <div style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; color: #707579;">\n            Image content goes here\n          </div>\n        </tgui-card-cell>\n        <tgui-card-cell\n          header="Card Title"\n          subtitle="Card description text would go here to provide more information about this card.">\n          <div style="margin-top: 10px; color: #707579;">\n            Additional content can be added here\n          </div>\n        </tgui-card-cell>\n      </tgui-card>\n    `\n  })\n}',...Default.parameters?.docs?.source}}},WithDirectImage.parameters={...WithDirectImage.parameters,docs:{...WithDirectImage.parameters?.docs,source:{originalSource:'{\n  args: {\n    image: \'https://via.placeholder.com/300x200\'\n  },\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-card \n        [type]="type" \n        [borderRadius]="borderRadius" \n        [image]="image" \n        [imageHeight]="imageHeight"\n        style="width: 300px;">\n        <tgui-card-cell\n          header="Direct Image Card"\n          subtitle="This card uses the image property directly on the card without a separate cell.">\n          <div style="margin-top: 10px; color: #707579;">\n            This approach is more similar to the React implementation.\n          </div>\n        </tgui-card-cell>\n      </tgui-card>\n    `\n  })\n}',...WithDirectImage.parameters?.docs?.source}}},WithChip.parameters={...WithChip.parameters,docs:{...WithChip.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-card [type]="type" [borderRadius]="borderRadius" style="width: 300px; position: relative;">\n        <tgui-card-chip mode="elevated">\n          <span>New</span>\n        </tgui-card-chip>\n        <tgui-card-cell [isImage]="true">\n          <div style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; color: #707579;">\n            Image content goes here\n          </div>\n        </tgui-card-cell>\n        <tgui-card-cell\n          header="Card with Chip"\n          subtitle="This card includes a chip component positioned in the top-right corner.">\n        </tgui-card-cell>\n      </tgui-card>\n    `\n  })\n}',...WithChip.parameters?.docs?.source}}},WithDirectImageAndChip.parameters={...WithDirectImageAndChip.parameters,docs:{...WithDirectImageAndChip.parameters?.docs,source:{originalSource:'{\n  args: {\n    image: \'https://via.placeholder.com/300x200\'\n  },\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-card \n        [type]="type" \n        [borderRadius]="borderRadius" \n        [image]="image" \n        [imageHeight]="imageHeight"\n        style="width: 300px; position: relative;">\n        <tgui-card-chip mode="elevated">\n          <span>New</span>\n        </tgui-card-chip>\n        <tgui-card-cell\n          header="Direct Image with Chip"\n          subtitle="This card combines the direct image approach with a chip.">\n        </tgui-card-cell>\n      </tgui-card>\n    `\n  })\n}',...WithDirectImageAndChip.parameters?.docs?.source}}},WithAdvancedChip.parameters={...WithAdvancedChip.parameters,docs:{...WithAdvancedChip.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: {\n      ...args,\n      beforeIcon: `\n        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n          <path d="M8 3.5V12.5M3.5 8H12.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" />\n        </svg>\n      `\n    },\n    template: `\n      <tgui-card [type]="type" [borderRadius]="borderRadius" style="width: 300px; position: relative;">\n        <tgui-card-chip [mode]="\'mono\'" [before]="beforeTemplate">\n          Featured\n        </tgui-card-chip>\n        <tgui-card-cell [isImage]="true">\n          <div style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; color: #707579;">\n            Image content goes here\n          </div>\n        </tgui-card-cell>\n        <tgui-card-cell\n          header="Advanced Chip"\n          subtitle="This card uses a chip with an icon and styling.">\n        </tgui-card-cell>\n\n        <ng-template #beforeTemplate>\n          <div [innerHTML]="beforeIcon"></div>\n        </ng-template>\n      </tgui-card>\n    `\n  })\n}',...WithAdvancedChip.parameters?.docs?.source}}},CustomBorderRadius.parameters={...CustomBorderRadius.parameters,docs:{...CustomBorderRadius.parameters?.docs,source:{originalSource:'{\n  args: {\n    borderRadius: \'8px\'\n  },\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-card [type]="type" [borderRadius]="borderRadius" style="width: 300px; position: relative;">\n        <tgui-card-cell [isImage]="true">\n          <div style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; color: #707579;">\n            Image with custom border radius\n          </div>\n        </tgui-card-cell>\n        <tgui-card-cell\n          header="Custom Border Radius"\n          subtitle="This card uses a custom border radius of 8px instead of the default 24px.">\n        </tgui-card-cell>\n      </tgui-card>\n    `\n  })\n}',...CustomBorderRadius.parameters?.docs?.source}}},Ambient.parameters={...Ambient.parameters,docs:{...Ambient.parameters?.docs,source:{originalSource:'{\n  args: {\n    type: \'ambient\'\n  },\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-card [type]="type" [borderRadius]="borderRadius" style="width: 300px;">\n        <tgui-card-cell\n          header="Ambient Card"\n          subtitle="This card uses the ambient style with a dark background.">\n          <div style="margin-top: 12px; color: rgba(255, 255, 255, 0.5);">\n            Additional content with lower opacity text\n          </div>\n        </tgui-card-cell>\n      </tgui-card>\n    `\n  })\n}',...Ambient.parameters?.docs?.source}}}}}]);
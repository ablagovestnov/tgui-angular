(self.webpackChunktguiangular=self.webpackChunktguiangular||[]).push([[3418],{"./projects/tgui/src/lib/components/blocks/banner/banner.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICA6aG9zdCB7CiAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgfQoKICAgIC53cmFwcGVyIHsKICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBnYXA6IDIwcHg7CiAgICAgIHBhZGRpbmc6IDE2cHggMjBweDsKICAgICAgYmFja2dyb3VuZDogdmFyKC0tdGd1aS0tYmdfY29sb3IpOwogICAgfQoKICAgIC53cmFwcGVyLS1iYXNlOm5vdCgud3JhcHBlci0td2l0aEJhY2tncm91bmQpIHsKICAgICAgYm94LXNoYWRvdzogdmFyKC0tdGd1aS0tYmFzZS0tc2VjdGlvbi0tYm94X3NoYWRvdyk7CiAgICB9CgogICAgLndyYXBwZXItLWlvcyB7CiAgICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7CiAgICB9CgogICAgLndyYXBwZXItLXdpdGhCYWNrZ3JvdW5kIHsKICAgICAgcGFkZGluZzogMjBweDsKICAgIH0KCiAgICAud3JhcHBlci0td2l0aEJhY2tncm91bmQgLnRpdGxlIHsKICAgICAgY29sb3I6IHZhcigtLXRndWktLXdoaXRlKTsKICAgIH0KCiAgICAud3JhcHBlci0td2l0aEJhY2tncm91bmQgLnN1YmhlYWRlciB7CiAgICAgIG9wYWNpdHk6IC44OwogICAgICBjb2xvcjogdmFyKC0tdGd1aS0td2hpdGUpOwogICAgfQoKICAgIC53cmFwcGVyLS1pbmxpbmUgewogICAgICBiYWNrZ3JvdW5kOiB2YXIoLS10Z3VpLS1iZ19jb2xvcik7CiAgICB9CgogICAgLndyYXBwZXItLWJhc2Uud3JhcHBlci0taW5saW5lIHsKICAgICAgbWFyZ2luOiA4cHggMjBweDsKICAgICAgYm9yZGVyLXJhZGl1czogMTZweDsKICAgICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tdGd1aS0tb3V0bGluZSk7CiAgICAgIGJveC1zaGFkb3c6IG5vbmU7CiAgICB9CgogICAgLndyYXBwZXItLWlvcy53cmFwcGVyLS1pbmxpbmUgewogICAgICBtYXJnaW46IDhweCAxNnB4OwogICAgICBiYWNrZ3JvdW5kOiB2YXIoLS10Z3VpLS1xdWFydGVuYXJ5X2JnX2NvbG9yKTsKICAgIH0KCiAgICAuYmFja2dyb3VuZCB7CiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgaW5zZXQ6IDA7CiAgICB9CgogICAgLm1pZGRsZSB7CiAgICAgIGZsZXg6IDEgMSAwOwogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgICBnYXA6IDJweDsKICAgICAgei1pbmRleDogdmFyKC0tdGd1aS0tei1pbmRleC0tc2ltcGxlKTsKICAgIH0KCiAgICAuc3ViaGVhZGVyIHsKICAgICAgY29sb3I6IHZhcigtLXRndWktLXN1YnRpdGxlX3RleHRfY29sb3IpOwogICAgfQoKICAgIC5kZXNjcmlwdGlvbiB7CiAgICAgIGNvbG9yOiB2YXIoLS10Z3VpLS1oaW50X2NvbG9yKTsKICAgIH0KCiAgICAuYnV0dG9ucyB7CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGdhcDogNHB4OwogICAgICBtYXJnaW4tdG9wOiAxMHB4OwogICAgfQoKICAgIC5jbG9zZSB7CiAgICAgIGhlaWdodDogMjhweDsKICAgICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgfQogIA%3D%3D!./projects/tgui/src/lib/components/blocks/banner/banner.component.ts":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"\n    :host {\n      display: block;\n    }\n\n    .wrapper {\n      overflow: hidden;\n      position: relative;\n      display: flex;\n      gap: 20px;\n      padding: 16px 20px;\n      background: var(--tgui--bg_color);\n    }\n\n    .wrapper--base:not(.wrapper--withBackground) {\n      box-shadow: var(--tgui--base--section--box_shadow);\n    }\n\n    .wrapper--ios {\n      border-radius: 16px;\n    }\n\n    .wrapper--withBackground {\n      padding: 20px;\n    }\n\n    .wrapper--withBackground .title {\n      color: var(--tgui--white);\n    }\n\n    .wrapper--withBackground .subheader {\n      opacity: .8;\n      color: var(--tgui--white);\n    }\n\n    .wrapper--inline {\n      background: var(--tgui--bg_color);\n    }\n\n    .wrapper--base.wrapper--inline {\n      margin: 8px 20px;\n      border-radius: 16px;\n      border: 1px solid var(--tgui--outline);\n      box-shadow: none;\n    }\n\n    .wrapper--ios.wrapper--inline {\n      margin: 8px 16px;\n      background: var(--tgui--quartenary_bg_color);\n    }\n\n    .background {\n      position: absolute;\n      inset: 0;\n    }\n\n    .middle {\n      flex: 1 1 0;\n      display: flex;\n      flex-direction: column;\n      gap: 2px;\n      z-index: var(--tgui--z-index--simple);\n    }\n\n    .subheader {\n      color: var(--tgui--subtitle_text_color);\n    }\n\n    .description {\n      color: var(--tgui--hint_color);\n    }\n\n    .buttons {\n      display: flex;\n      gap: 4px;\n      margin-top: 10px;\n    }\n\n    .close {\n      height: 28px;\n      border-radius: 50%;\n    }\n  ",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/tgui/src/lib/components/blocks/banner/stories/banner.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomCloseIcon:()=>CustomCloseIcon,Default:()=>Default,InlineType:()=>InlineType,Playground:()=>Playground,WithBackground:()=>WithBackground,WithBeforeContent:()=>WithBeforeContent,WithCallout:()=>WithCallout,__namedExportsOrder:()=>__namedExportsOrder,default:()=>banner_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),banner_component=__webpack_require__("./projects/tgui/src/lib/components/blocks/banner/banner.component.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICA6aG9zdCB7CiAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgfQoKICAgIC53cmFwcGVyIHsKICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBnYXA6IDIwcHg7CiAgICAgIHBhZGRpbmc6IDE2cHggMjBweDsKICAgICAgYmFja2dyb3VuZDogdmFyKC0tdGd1aS0tYmdfY29sb3IpOwogICAgfQoKICAgIC53cmFwcGVyLS1iYXNlOm5vdCgud3JhcHBlci0td2l0aEJhY2tncm91bmQpIHsKICAgICAgYm94LXNoYWRvdzogdmFyKC0tdGd1aS0tYmFzZS0tc2VjdGlvbi0tYm94X3NoYWRvdyk7CiAgICB9CgogICAgLndyYXBwZXItLWlvcyB7CiAgICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7CiAgICB9CgogICAgLndyYXBwZXItLXdpdGhCYWNrZ3JvdW5kIHsKICAgICAgcGFkZGluZzogMjBweDsKICAgIH0KCiAgICAud3JhcHBlci0td2l0aEJhY2tncm91bmQgLnRpdGxlIHsKICAgICAgY29sb3I6IHZhcigtLXRndWktLXdoaXRlKTsKICAgIH0KCiAgICAud3JhcHBlci0td2l0aEJhY2tncm91bmQgLnN1YmhlYWRlciB7CiAgICAgIG9wYWNpdHk6IC44OwogICAgICBjb2xvcjogdmFyKC0tdGd1aS0td2hpdGUpOwogICAgfQoKICAgIC53cmFwcGVyLS1pbmxpbmUgewogICAgICBiYWNrZ3JvdW5kOiB2YXIoLS10Z3VpLS1iZ19jb2xvcik7CiAgICB9CgogICAgLndyYXBwZXItLWJhc2Uud3JhcHBlci0taW5saW5lIHsKICAgICAgbWFyZ2luOiA4cHggMjBweDsKICAgICAgYm9yZGVyLXJhZGl1czogMTZweDsKICAgICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tdGd1aS0tb3V0bGluZSk7CiAgICAgIGJveC1zaGFkb3c6IG5vbmU7CiAgICB9CgogICAgLndyYXBwZXItLWlvcy53cmFwcGVyLS1pbmxpbmUgewogICAgICBtYXJnaW46IDhweCAxNnB4OwogICAgICBiYWNrZ3JvdW5kOiB2YXIoLS10Z3VpLS1xdWFydGVuYXJ5X2JnX2NvbG9yKTsKICAgIH0KCiAgICAuYmFja2dyb3VuZCB7CiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgaW5zZXQ6IDA7CiAgICB9CgogICAgLm1pZGRsZSB7CiAgICAgIGZsZXg6IDEgMSAwOwogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgICBnYXA6IDJweDsKICAgICAgei1pbmRleDogdmFyKC0tdGd1aS0tei1pbmRleC0tc2ltcGxlKTsKICAgIH0KCiAgICAuc3ViaGVhZGVyIHsKICAgICAgY29sb3I6IHZhcigtLXRndWktLXN1YnRpdGxlX3RleHRfY29sb3IpOwogICAgfQoKICAgIC5kZXNjcmlwdGlvbiB7CiAgICAgIGNvbG9yOiB2YXIoLS10Z3VpLS1oaW50X2NvbG9yKTsKICAgIH0KCiAgICAuYnV0dG9ucyB7CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGdhcDogNHB4OwogICAgICBtYXJnaW4tdG9wOiAxMHB4OwogICAgfQoKICAgIC5jbG9zZSB7CiAgICAgIGhlaWdodDogMjhweDsKICAgICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgfQogIA%3D%3D!./projects/tgui/src/lib/components/blocks/banner/banner.component.ts"),banner_component_default=__webpack_require__.n(banner_component),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common_module_CBrzkrmd=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-CBrzkrmd.mjs"),platform_service=__webpack_require__("./projects/tgui/src/lib/services/platform.service.ts"),tappable_component=__webpack_require__("./projects/tgui/src/lib/components/utils/tappable/tappable.component.ts"),subheadline_component=__webpack_require__("./projects/tgui/src/lib/components/typography/subheadline/subheadline.component.ts"),text_component=__webpack_require__("./projects/tgui/src/lib/components/typography/text/text.component.ts"),caption_component=__webpack_require__("./projects/tgui/src/lib/components/typography/caption/caption.component.ts"),dynamic_icon_component=__webpack_require__("./projects/tgui/src/lib/icons/dynamic-icon.component.ts"),content_slot_directive=__webpack_require__("./projects/tgui/src/lib/directives/content-slot.directive.ts");let BannerComponent=class BannerComponent{onCloseIcon=new core.EventEmitter;platformService=(0,core.inject)(platform_service.f);elementRef=(0,core.inject)(core.ElementRef);contentSlots;type=(0,core.input)("section");closeIcon=(0,core.input)(void 0);isIOS=this.platformService.isIOS();_hasBeforeContent=!1;_hasCalloutContent=!1;_hasHeaderContent=!1;_hasSubheaderContent=!1;_hasDescriptionContent=!1;_hasBackgroundContent=!1;_hasButtonsContent=!1;get hasBeforeContent(){return this._hasBeforeContent}get hasCalloutContent(){return this._hasCalloutContent}get hasHeaderContent(){return this._hasHeaderContent}get hasSubheaderContent(){return this._hasSubheaderContent}get hasDescriptionContent(){return this._hasDescriptionContent}get hasBackgroundContent(){return this._hasBackgroundContent}get hasButtonsContent(){return this._hasButtonsContent}ngAfterContentInit(){this.updateContentFlags(),this.contentSlots.changes.subscribe((()=>{this.updateContentFlags()}))}updateContentFlags(){this._hasBeforeContent=this.hasSlot("before"),this._hasCalloutContent=this.hasSlot("callout"),this._hasHeaderContent=this.hasSlot("header"),this._hasSubheaderContent=this.hasSlot("subheader"),this._hasDescriptionContent=this.hasSlot("description"),this._hasBackgroundContent=this.hasSlot("background"),this._hasButtonsContent=this.hasSlot("buttons")}hasSlot(slotName){return this.contentSlots.some((slot=>slot.slotName===slotName))}getCloseIconName(){return this.closeIcon()?this.closeIcon():this.hasBackgroundContent?"tgui-icon28-close-ambient":this.platformService.isIOS()?"tgui-icon24-cancel":"tgui-icon28-close"}static propDecorators={onCloseIcon:[{type:core.Output}],contentSlots:[{type:core.ContentChildren,args:[content_slot_directive.T]}],type:[{type:core.Input,args:[{isSignal:!0,alias:"type",required:!1,transform:void 0}]}],closeIcon:[{type:core.Input,args:[{isSignal:!0,alias:"closeIcon",required:!1,transform:void 0}]}]}};BannerComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"tgui-banner",standalone:!0,imports:[common_module_CBrzkrmd.MD,tappable_component.t,subheadline_component.c,text_component.N,caption_component.C,dynamic_icon_component.t,content_slot_directive.T],template:'\n    <section \n      class="wrapper"\n      [class.wrapper--ios]="platformService.isIOS()"\n      [class.wrapper--base]="!platformService.isIOS()"\n      [class.wrapper--withBackground]="hasBackgroundContent"\n      [class.wrapper--inline]="type() === \'inline\'"\n    >\n      <div *ngIf="hasBackgroundContent" class="background">\n        <ng-content select="[content-slot=background]"></ng-content>\n      </div>\n\n      <ng-content select="[content-slot=before]"></ng-content>\n\n      <div class="middle">\n        <tgui-subheadline *ngIf="hasCalloutContent" class="subheader" level="2">\n          <ng-content select="[content-slot=callout]"></ng-content>\n        </tgui-subheadline>\n\n        <tgui-text *ngIf="hasHeaderContent" class="title" weight="2">\n          <ng-content select="[content-slot=header]"></ng-content>\n        </tgui-text>\n\n        <tgui-subheadline *ngIf="hasSubheaderContent" class="subheader" level="2">\n          <ng-content select="[content-slot=subheader]"></ng-content>\n        </tgui-subheadline>\n\n        <ng-container *ngIf="hasDescriptionContent">\n          <ng-container *ngIf="platformService.isIOS(); else baseDescription">\n            <tgui-caption class="description" level="1">\n              <ng-content select="[content-slot=description]"></ng-content>\n            </tgui-caption>\n          </ng-container>\n          <ng-template #baseDescription>\n            <tgui-subheadline class="description" level="2">\n              <ng-content select="[content-slot=description]"></ng-content>\n            </tgui-subheadline>\n          </ng-template>\n        </ng-container>\n\n        <div *ngIf="hasButtonsContent" class="buttons">\n          <ng-content select="[content-slot=buttons]"></ng-content>\n        </div>\n      </div>\n\n      <tgui-tappable *ngIf="onCloseIcon.observers?.length" \n        (click)="onCloseIcon.emit($event)" \n        class="close"\n      >\n        <tgui-dynamic-icon [icon]="getCloseIconName()"></tgui-dynamic-icon>\n      </tgui-tappable>\n    </section>\n  ',encapsulation:core.ViewEncapsulation.Emulated,changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[banner_component_default()]})],BannerComponent);var button_component=__webpack_require__("./projects/tgui/src/lib/components/blocks/button/button.component.ts"),tgui_icon24_qr=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-qr.ts");const banner_stories={title:"Blocks/Banner",component:BannerComponent,decorators:[(0,dist.moduleMetadata)({imports:[BannerComponent,button_component.Q,tgui_icon24_qr.u,content_slot_directive.T]})],parameters:{layout:"padded"},argTypes:{type:{options:["section","inline"],control:{type:"select"},description:"Specifies the banner's layout style",table:{defaultValue:{summary:"section"}}},onCloseIcon:{action:"onCloseIcon"},closeIcon:{control:"text",description:"Custom close icon name to display"}}},Playground={render:args=>({props:args,template:'\n      <div style="background: var(--tgui--secondary_bg_color); padding: 8px;">\n        <tgui-banner [type]="type" (onCloseIcon)="onCloseIcon($event)" [closeIcon]="closeIcon">\n          <div content-slot="before" style="width: 48px; height: 48px; background: #eaeaea; border-radius: 8px; display: flex; align-items: center; justify-content: center;">\n            <tgui-icon24-qr></tgui-icon24-qr>\n          </div>\n          <div content-slot="callout">Urgent notification</div>\n          <div content-slot="header">Introducing TON Space</div>\n          <div content-slot="description">Start exploring TON in a new, better way</div>\n          <div content-slot="buttons">\n            <tgui-button size="s">Try it out</tgui-button>\n            <tgui-button size="s" mode="plain">Maybe later</tgui-button>\n          </div>\n        </tgui-banner>\n      </div>\n    '}),args:{type:"section"}},Default={render:args=>({props:args,template:'\n      <tgui-banner [type]="type" (onCloseIcon)="onCloseIcon($event)">\n        <div content-slot="header">This is a banner</div>\n        <div content-slot="description">Banner description that can span multiple lines and provide additional information about the banner content</div>\n        <div content-slot="buttons">\n          <tgui-button size="s" mode="bezeled">Action</tgui-button>\n        </div>\n      </tgui-banner>\n    '}),args:{type:"section"}},WithCallout={render:args=>({props:args,template:'\n      <tgui-banner [type]="type" (onCloseIcon)="onCloseIcon($event)">\n        <div content-slot="callout">New Feature</div>\n        <div content-slot="header">This is a banner with callout</div>\n        <div content-slot="description">Banner description that can span multiple lines and provide additional information about the banner content</div>\n        <div content-slot="buttons">\n          <tgui-button size="s" mode="bezeled">Action</tgui-button>\n        </div>\n      </tgui-banner>\n    '}),args:{type:"section"}},WithBackground={render:args=>({props:args,template:'\n      <tgui-banner [type]="type" (onCloseIcon)="onCloseIcon($event)">\n        <div content-slot="background">\n          <div style="background: linear-gradient(45deg, #4158D0, #C850C0, #FFCC70); width: 100%; height: 100%;"></div>\n        </div>\n        <div content-slot="header">Banner with background</div>\n        <div content-slot="description">Description text on a colorful background</div>\n        <div content-slot="buttons">\n          <tgui-button size="s" mode="white">Action</tgui-button>\n        </div>\n      </tgui-banner>\n    '}),args:{type:"section"}},WithBeforeContent={render:args=>({props:args,template:'\n      <tgui-banner [type]="type" (onCloseIcon)="onCloseIcon($event)">\n        <div content-slot="before" style="width: 48px; height: 48px; background: #eee; border-radius: 8px; display: flex; align-items: center; justify-content: center;">\n          Icon\n        </div>\n        <div content-slot="header">Banner with before content</div>\n        <div content-slot="description">This banner has content before the main text</div>\n        <div content-slot="buttons">\n          <tgui-button size="s" mode="bezeled">Action</tgui-button>\n        </div>\n      </tgui-banner>\n    '}),args:{type:"section"}},InlineType={render:args=>({props:args,template:'\n      <tgui-banner [type]="type" (onCloseIcon)="onCloseIcon($event)">\n        <div content-slot="header">Inline banner</div>\n        <div content-slot="description">This banner uses the inline type</div>\n        <div content-slot="buttons">\n          <tgui-button size="s" mode="bezeled">Action</tgui-button>\n        </div>\n      </tgui-banner>\n    '}),args:{type:"inline"}},CustomCloseIcon={render:args=>({props:args,template:'\n      <tgui-banner [type]="type" (onCloseIcon)="onCloseIcon($event)" [closeIcon]="closeIcon">\n        <div content-slot="header">Banner with custom close icon</div>\n        <div content-slot="description">This banner has a custom close icon</div>\n      </tgui-banner>\n    '}),args:{type:"section",closeIcon:"tgui-icon24-qr"}},__namedExportsOrder=["Playground","Default","WithCallout","WithBackground","WithBeforeContent","InlineType","CustomCloseIcon"];Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      <div style="background: var(--tgui--secondary_bg_color); padding: 8px;">\n        <tgui-banner [type]="type" (onCloseIcon)="onCloseIcon($event)" [closeIcon]="closeIcon">\n          <div content-slot="before" style="width: 48px; height: 48px; background: #eaeaea; border-radius: 8px; display: flex; align-items: center; justify-content: center;">\n            <tgui-icon24-qr></tgui-icon24-qr>\n          </div>\n          <div content-slot="callout">Urgent notification</div>\n          <div content-slot="header">Introducing TON Space</div>\n          <div content-slot="description">Start exploring TON in a new, better way</div>\n          <div content-slot="buttons">\n            <tgui-button size="s">Try it out</tgui-button>\n            <tgui-button size="s" mode="plain">Maybe later</tgui-button>\n          </div>\n        </tgui-banner>\n      </div>\n    `\n  }),\n  args: {\n    type: \'section\'\n  }\n}',...Playground.parameters?.docs?.source}}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-banner [type]="type" (onCloseIcon)="onCloseIcon($event)">\n        <div content-slot="header">This is a banner</div>\n        <div content-slot="description">Banner description that can span multiple lines and provide additional information about the banner content</div>\n        <div content-slot="buttons">\n          <tgui-button size="s" mode="bezeled">Action</tgui-button>\n        </div>\n      </tgui-banner>\n    `\n  }),\n  args: {\n    type: \'section\'\n  }\n}',...Default.parameters?.docs?.source}}},WithCallout.parameters={...WithCallout.parameters,docs:{...WithCallout.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-banner [type]="type" (onCloseIcon)="onCloseIcon($event)">\n        <div content-slot="callout">New Feature</div>\n        <div content-slot="header">This is a banner with callout</div>\n        <div content-slot="description">Banner description that can span multiple lines and provide additional information about the banner content</div>\n        <div content-slot="buttons">\n          <tgui-button size="s" mode="bezeled">Action</tgui-button>\n        </div>\n      </tgui-banner>\n    `\n  }),\n  args: {\n    type: \'section\'\n  }\n}',...WithCallout.parameters?.docs?.source}}},WithBackground.parameters={...WithBackground.parameters,docs:{...WithBackground.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-banner [type]="type" (onCloseIcon)="onCloseIcon($event)">\n        <div content-slot="background">\n          <div style="background: linear-gradient(45deg, #4158D0, #C850C0, #FFCC70); width: 100%; height: 100%;"></div>\n        </div>\n        <div content-slot="header">Banner with background</div>\n        <div content-slot="description">Description text on a colorful background</div>\n        <div content-slot="buttons">\n          <tgui-button size="s" mode="white">Action</tgui-button>\n        </div>\n      </tgui-banner>\n    `\n  }),\n  args: {\n    type: \'section\'\n  }\n}',...WithBackground.parameters?.docs?.source}}},WithBeforeContent.parameters={...WithBeforeContent.parameters,docs:{...WithBeforeContent.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-banner [type]="type" (onCloseIcon)="onCloseIcon($event)">\n        <div content-slot="before" style="width: 48px; height: 48px; background: #eee; border-radius: 8px; display: flex; align-items: center; justify-content: center;">\n          Icon\n        </div>\n        <div content-slot="header">Banner with before content</div>\n        <div content-slot="description">This banner has content before the main text</div>\n        <div content-slot="buttons">\n          <tgui-button size="s" mode="bezeled">Action</tgui-button>\n        </div>\n      </tgui-banner>\n    `\n  }),\n  args: {\n    type: \'section\'\n  }\n}',...WithBeforeContent.parameters?.docs?.source}}},InlineType.parameters={...InlineType.parameters,docs:{...InlineType.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-banner [type]="type" (onCloseIcon)="onCloseIcon($event)">\n        <div content-slot="header">Inline banner</div>\n        <div content-slot="description">This banner uses the inline type</div>\n        <div content-slot="buttons">\n          <tgui-button size="s" mode="bezeled">Action</tgui-button>\n        </div>\n      </tgui-banner>\n    `\n  }),\n  args: {\n    type: \'inline\'\n  }\n}',...InlineType.parameters?.docs?.source}}},CustomCloseIcon.parameters={...CustomCloseIcon.parameters,docs:{...CustomCloseIcon.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-banner [type]="type" (onCloseIcon)="onCloseIcon($event)" [closeIcon]="closeIcon">\n        <div content-slot="header">Banner with custom close icon</div>\n        <div content-slot="description">This banner has a custom close icon</div>\n      </tgui-banner>\n    `\n  }),\n  args: {\n    type: \'section\',\n    closeIcon: \'tgui-icon24-qr\'\n  }\n}',...CustomCloseIcon.parameters?.docs?.source}}}},"./projects/tgui/src/lib/icons/dynamic-icon.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{t:()=>TguiDynamicIconComponent});var icons_namespaceObject={};__webpack_require__.r(icons_namespaceObject),__webpack_require__.d(icons_namespaceObject,{TguiDynamicIconComponent:()=>TguiDynamicIconComponent,TguiIcon12Quote:()=>tgui_icon12_quote.u,TguiIcon16Cancel:()=>tgui_icon16_cancel.I,TguiIcon16Chevron:()=>tgui_icon16_chevron.x,TguiIcon20ChevronDown:()=>tgui_icon20_chevron_down.C,TguiIcon20Copy:()=>tgui_icon20_copy.a,TguiIcon20QuestionMark:()=>tgui_icon20_question_mark.a,TguiIcon20Select:()=>tgui_icon20_select.r,TguiIcon20SelectIos:()=>tgui_icon20_select_ios.a,TguiIcon24Cancel:()=>tgui_icon24_cancel.z,TguiIcon24Channel:()=>tgui_icon24_channel.Y,TguiIcon24Chat:()=>tgui_icon24_chat.j,TguiIcon24ChevronDown:()=>tgui_icon24_chevron_down.w,TguiIcon24ChevronLeft:()=>tgui_icon24_chevron_left.$,TguiIcon24ChevronRight:()=>tgui_icon24_chevron_right.U,TguiIcon24Close:()=>tgui_icon24_close.T,TguiIcon24Notifications:()=>tgui_icon24_notifications.t,TguiIcon24PersonRemove:()=>tgui_icon24_person_remove.C,TguiIcon24Qr:()=>tgui_icon24_qr.u,TguiIcon24SunLow:()=>tgui_icon24_sun_low.N,TguiIcon28AddCircle:()=>tgui_icon28_add_circle.M,TguiIcon28Archive:()=>tgui_icon28_archive.J,TguiIcon28Attach:()=>tgui_icon28_attach.Q,TguiIcon28Chat:()=>tgui_icon28_chat.$,TguiIcon28Close:()=>tgui_icon28_close.$,TguiIcon28CloseAmbient:()=>tgui_icon28_close_ambient.r,TguiIcon28Devices:()=>tgui_icon28_devices.o,TguiIcon28Edit:()=>tgui_icon28_edit.z,TguiIcon28Heart:()=>tgui_icon28_heart.J,TguiIcon28Stats:()=>tgui_icon28_stats.s,TguiIcon32ProfileColoredSquare:()=>tgui_icon32_profile_colored_square.i,TguiIcon36Backspace:()=>tgui_icon36_backspace.L,TguiIconBase:()=>icon_base_component.M});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common_module_CBrzkrmd=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-CBrzkrmd.mjs"),tgui_icon12_quote=__webpack_require__("./projects/tgui/src/lib/icons/icon12/tgui-icon12-quote.ts"),tgui_icon16_chevron=__webpack_require__("./projects/tgui/src/lib/icons/icon16/tgui-icon16-chevron.ts"),tgui_icon16_cancel=__webpack_require__("./projects/tgui/src/lib/icons/icon16/tgui-icon16-cancel.ts"),tgui_icon20_select_ios=__webpack_require__("./projects/tgui/src/lib/icons/icon20/tgui-icon20-select-ios.ts"),tgui_icon20_select=__webpack_require__("./projects/tgui/src/lib/icons/icon20/tgui-icon20-select.ts"),tgui_icon20_question_mark=__webpack_require__("./projects/tgui/src/lib/icons/icon20/tgui-icon20-question-mark.ts"),tgui_icon20_chevron_down=__webpack_require__("./projects/tgui/src/lib/icons/icon20/tgui-icon20-chevron-down.ts"),tgui_icon20_copy=__webpack_require__("./projects/tgui/src/lib/icons/icon20/tgui-icon20-copy.ts"),tgui_icon24_close=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-close.ts"),tgui_icon24_sun_low=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-sun-low.ts"),tgui_icon24_qr=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-qr.ts"),tgui_icon24_person_remove=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-person-remove.ts"),tgui_icon24_notifications=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-notifications.ts"),tgui_icon24_chevron_right=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-chevron-right.ts"),tgui_icon24_chevron_left=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-chevron-left.ts"),tgui_icon24_chat=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-chat.ts"),tgui_icon24_channel=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-channel.ts"),tgui_icon24_cancel=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-cancel.ts"),tgui_icon24_chevron_down=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-chevron-down.ts"),tgui_icon28_close=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-close.ts"),tgui_icon28_close_ambient=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-close-ambient.ts"),tgui_icon28_stats=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-stats.ts"),tgui_icon28_heart=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-heart.ts"),tgui_icon28_edit=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-edit.ts"),tgui_icon28_devices=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-devices.ts"),tgui_icon28_chat=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-chat.ts"),tgui_icon28_attach=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-attach.ts"),tgui_icon28_archive=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-archive.ts"),tgui_icon28_add_circle=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-add-circle.ts"),tgui_icon32_profile_colored_square=__webpack_require__("./projects/tgui/src/lib/icons/icon32/tgui-icon32-profile-colored-square.ts"),tgui_icon36_backspace=__webpack_require__("./projects/tgui/src/lib/icons/icon36/tgui-icon36-backspace.ts"),icon_base_component=__webpack_require__("./projects/tgui/src/lib/icons/icon-base.component.ts");let TguiDynamicIconComponent=class TguiDynamicIconComponent{icon;iconContainer;componentRef=null;iconSizes=["12","16","20","24","28","32","36"];ngOnChanges(changes){changes.icon&&this.loadIconComponent()}loadIconComponent(){this.componentRef&&(this.componentRef.destroy(),this.componentRef=null),this.iconContainer.clear();let iconComponentName=this.formatIconComponentName(this.icon),IconComponent=icons_namespaceObject[iconComponentName];if(!IconComponent&&!this.hasSize(this.icon))for(const size of this.iconSizes)if(iconComponentName=this.toCamelCase(`tgui-icon${size}-${this.icon}`),IconComponent=icons_namespaceObject[iconComponentName],IconComponent)break;IconComponent?this.componentRef=this.iconContainer.createComponent(IconComponent):console.warn(`Icon component "${this.icon}" not found.`)}hasSize(iconName){if(iconName.startsWith("tgui-icon")&&/tgui-icon\d+/.test(iconName))return!0;if(iconName.includes("-")){return iconName.split("-").some((part=>/^\d+$/.test(part)))}return!1}formatIconComponentName(iconName){if(iconName.startsWith("tgui-icon"))return this.toCamelCase(iconName);if(iconName.includes("-")){const parts=iconName.split("-");if(/^\d+$/.test(parts[parts.length-1])){const size=parts.pop();return this.toCamelCase(`tgui-icon${size}-${parts.join("-")}`)}if(/^\d+$/.test(parts[0])){const size=parts.shift();return this.toCamelCase(`tgui-icon${size}-${parts.join("-")}`)}}return this.toCamelCase(`tgui-icon-${iconName}`)}toCamelCase(str){return str.replace(/(^|-|_)([a-z])/g,((match,separator,char)=>char.toUpperCase())).replace(/(-|_)/g,"")}static propDecorators={icon:[{type:core.Input}],iconContainer:[{type:core.ViewChild,args:["iconContainer",{read:core.ViewContainerRef,static:!0}]}]}};TguiDynamicIconComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"tgui-dynamic-icon",standalone:!0,imports:[common_module_CBrzkrmd.MD],template:"<ng-container #iconContainer></ng-container>"})],TguiDynamicIconComponent)}}]);
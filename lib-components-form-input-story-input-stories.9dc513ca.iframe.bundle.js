"use strict";(self.webpackChunktguiangular=self.webpackChunktguiangular||[]).push([[5588],{"./projects/tgui/src/lib/components/form/input/story/input.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Playground:()=>Playground,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-CBrzkrmd.mjs"),_input_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/tgui/src/lib/components/form/input/input.component.ts"),_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./projects/tgui/src/lib/components/utils/tappable/tappable.component.ts"),_icons__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./projects/tgui/src/lib/icons/dynamic-icon.component.ts"),_blocks_list_list_component__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./projects/tgui/src/lib/components/blocks/list/list.component.ts"),_angular_forms__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),_icons_icon24_tgui_icon24_close__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-close.ts"),_icons_icon16_tgui_icon16_cancel__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./projects/tgui/src/lib/icons/icon16/tgui-icon16-cancel.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Form/Input",component:_input_component__WEBPACK_IMPORTED_MODULE_1__.S,tags:["autodocs"],decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.MD,_utils__WEBPACK_IMPORTED_MODULE_3__.t,_icons__WEBPACK_IMPORTED_MODULE_4__.t,_blocks_list_list_component__WEBPACK_IMPORTED_MODULE_5__.s,_angular_forms__WEBPACK_IMPORTED_MODULE_6__.YN,_icons_icon24_tgui_icon24_close__WEBPACK_IMPORTED_MODULE_7__.T,_icons_icon16_tgui_icon16_cancel__WEBPACK_IMPORTED_MODULE_8__.I]})],parameters:{layout:"fullscreen"}},Playground={render:()=>{const value=(0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.signal)("");let inputElement=null;return{props:{value,onInput:event=>{const input=event.target;inputElement=input,value.set(input.value)},clearInput:()=>{console.log("clearInput"),value.set(""),console.log(value()),inputElement&&(inputElement.value="",inputElement.dispatchEvent(new Event("input",{bubbles:!0})))}},template:'\n        <tgui-list style="width: 400px; max-width: 100%; margin: auto; background: var(--tgui--secondary_bg_color);">\n          <tgui-input\n            header="Input"\n            placeholder="I am usual input, just leave me alone"\n          ></tgui-input>\n          \n          <tgui-input\n            status="error"\n            header="Input"\n            placeholder="I am error input, don\'t make my mistakes..."\n          ></tgui-input>\n          \n          <tgui-input\n            status="focused"\n            header="Input"\n            placeholder="I am focused input, are u focused on me?"\n          ></tgui-input>\n          \n          <tgui-input\n            [disabled]="true"\n            header="Input"\n            placeholder="I am disabled input"\n          ></tgui-input>\n          \n          <ng-template #clearButtonTemplate>\n            <tgui-tappable \n              style="display: flex"\n              (click)="clearInput()"\n            >\n              <tgui-icon16-cancel></tgui-icon16-cancel>\n            </tgui-tappable>\n          </ng-template>\n          \n          <tgui-input\n            status="focused"\n            header="Input with clear button"\n            placeholder="Write and clean me"\n            [value]="value()"\n            [after]="clearButtonTemplate"\n            (input)="onInput($event)"\n          ></tgui-input>\n          \n          <tgui-input\n            header="Input with before content"\n            placeholder="Input with icon before"\n            [before]="\'$\'"\n          ></tgui-input>\n          \n          <ng-template #searchIcon>\n            <div style="display: flex; padding: 0 16px;">\n              <tgui-dynamic-icon icon="search-24"></tgui-dynamic-icon>\n            </div>\n          </ng-template>\n          \n          <tgui-input\n            header="Input with before template"\n            placeholder="Search something..."\n            [before]="searchIcon"\n          ></tgui-input>\n        </tgui-list>\n      '}}},__namedExportsOrder=["Playground"];Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const value = signal(\'\');\n    let inputElement: HTMLInputElement | null = null;\n    const onInput = (event: Event) => {\n      const input = event.target as HTMLInputElement;\n      inputElement = input;\n      value.set(input.value);\n    };\n    const clearInput = () => {\n      console.log(\'clearInput\');\n      value.set(\'\');\n      console.log(value());\n\n      // Update the input element value directly\n      if (inputElement) {\n        inputElement.value = \'\';\n        // Generate input event to notify Angular about the change\n        inputElement.dispatchEvent(new Event(\'input\', {\n          bubbles: true\n        }));\n      }\n    };\n    return {\n      props: {\n        value,\n        onInput,\n        clearInput\n      },\n      template: `\n        <tgui-list style="width: 400px; max-width: 100%; margin: auto; background: var(--tgui--secondary_bg_color);">\n          <tgui-input\n            header="Input"\n            placeholder="I am usual input, just leave me alone"\n          ></tgui-input>\n          \n          <tgui-input\n            status="error"\n            header="Input"\n            placeholder="I am error input, don\'t make my mistakes..."\n          ></tgui-input>\n          \n          <tgui-input\n            status="focused"\n            header="Input"\n            placeholder="I am focused input, are u focused on me?"\n          ></tgui-input>\n          \n          <tgui-input\n            [disabled]="true"\n            header="Input"\n            placeholder="I am disabled input"\n          ></tgui-input>\n          \n          <ng-template #clearButtonTemplate>\n            <tgui-tappable \n              style="display: flex"\n              (click)="clearInput()"\n            >\n              <tgui-icon16-cancel></tgui-icon16-cancel>\n            </tgui-tappable>\n          </ng-template>\n          \n          <tgui-input\n            status="focused"\n            header="Input with clear button"\n            placeholder="Write and clean me"\n            [value]="value()"\n            [after]="clearButtonTemplate"\n            (input)="onInput($event)"\n          ></tgui-input>\n          \n          <tgui-input\n            header="Input with before content"\n            placeholder="Input with icon before"\n            [before]="\'$\'"\n          ></tgui-input>\n          \n          <ng-template #searchIcon>\n            <div style="display: flex; padding: 0 16px;">\n              <tgui-dynamic-icon icon="search-24"></tgui-dynamic-icon>\n            </div>\n          </ng-template>\n          \n          <tgui-input\n            header="Input with before template"\n            placeholder="Search something..."\n            [before]="searchIcon"\n          ></tgui-input>\n        </tgui-list>\n      `\n    };\n  }\n}',...Playground.parameters?.docs?.source}}}},"./projects/tgui/src/lib/icons/dynamic-icon.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>TguiDynamicIconComponent});var icons_namespaceObject={};__webpack_require__.r(icons_namespaceObject),__webpack_require__.d(icons_namespaceObject,{TguiDynamicIconComponent:()=>TguiDynamicIconComponent,TguiIcon12Quote:()=>tgui_icon12_quote.u,TguiIcon16Cancel:()=>tgui_icon16_cancel.I,TguiIcon16Chevron:()=>tgui_icon16_chevron.x,TguiIcon20ChevronDown:()=>tgui_icon20_chevron_down.C,TguiIcon20Copy:()=>tgui_icon20_copy.a,TguiIcon20QuestionMark:()=>tgui_icon20_question_mark.a,TguiIcon20Select:()=>tgui_icon20_select.r,TguiIcon20SelectIos:()=>tgui_icon20_select_ios.a,TguiIcon24Cancel:()=>tgui_icon24_cancel.z,TguiIcon24Channel:()=>tgui_icon24_channel.Y,TguiIcon24Chat:()=>tgui_icon24_chat.j,TguiIcon24ChevronDown:()=>tgui_icon24_chevron_down.w,TguiIcon24ChevronLeft:()=>tgui_icon24_chevron_left.$,TguiIcon24ChevronRight:()=>tgui_icon24_chevron_right.U,TguiIcon24Close:()=>tgui_icon24_close.T,TguiIcon24Notifications:()=>tgui_icon24_notifications.t,TguiIcon24PersonRemove:()=>tgui_icon24_person_remove.C,TguiIcon24Qr:()=>tgui_icon24_qr.u,TguiIcon24SunLow:()=>tgui_icon24_sun_low.N,TguiIcon28AddCircle:()=>tgui_icon28_add_circle.M,TguiIcon28Archive:()=>tgui_icon28_archive.J,TguiIcon28Attach:()=>tgui_icon28_attach.Q,TguiIcon28Chat:()=>tgui_icon28_chat.$,TguiIcon28Close:()=>tgui_icon28_close.$,TguiIcon28CloseAmbient:()=>tgui_icon28_close_ambient.r,TguiIcon28Devices:()=>tgui_icon28_devices.o,TguiIcon28Edit:()=>tgui_icon28_edit.z,TguiIcon28Heart:()=>tgui_icon28_heart.J,TguiIcon28Stats:()=>tgui_icon28_stats.s,TguiIcon32ProfileColoredSquare:()=>tgui_icon32_profile_colored_square.i,TguiIcon36Backspace:()=>tgui_icon36_backspace.L,TguiIconBase:()=>icon_base_component.M});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common_module_CBrzkrmd=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-CBrzkrmd.mjs"),tgui_icon12_quote=__webpack_require__("./projects/tgui/src/lib/icons/icon12/tgui-icon12-quote.ts"),tgui_icon16_chevron=__webpack_require__("./projects/tgui/src/lib/icons/icon16/tgui-icon16-chevron.ts"),tgui_icon16_cancel=__webpack_require__("./projects/tgui/src/lib/icons/icon16/tgui-icon16-cancel.ts"),tgui_icon20_select_ios=__webpack_require__("./projects/tgui/src/lib/icons/icon20/tgui-icon20-select-ios.ts"),tgui_icon20_select=__webpack_require__("./projects/tgui/src/lib/icons/icon20/tgui-icon20-select.ts"),tgui_icon20_question_mark=__webpack_require__("./projects/tgui/src/lib/icons/icon20/tgui-icon20-question-mark.ts"),tgui_icon20_chevron_down=__webpack_require__("./projects/tgui/src/lib/icons/icon20/tgui-icon20-chevron-down.ts"),tgui_icon20_copy=__webpack_require__("./projects/tgui/src/lib/icons/icon20/tgui-icon20-copy.ts"),tgui_icon24_close=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-close.ts"),tgui_icon24_sun_low=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-sun-low.ts"),tgui_icon24_qr=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-qr.ts"),tgui_icon24_person_remove=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-person-remove.ts"),tgui_icon24_notifications=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-notifications.ts"),tgui_icon24_chevron_right=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-chevron-right.ts"),tgui_icon24_chevron_left=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-chevron-left.ts"),tgui_icon24_chat=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-chat.ts"),tgui_icon24_channel=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-channel.ts"),tgui_icon24_cancel=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-cancel.ts"),tgui_icon24_chevron_down=__webpack_require__("./projects/tgui/src/lib/icons/icon24/tgui-icon24-chevron-down.ts"),tgui_icon28_close=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-close.ts"),tgui_icon28_close_ambient=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-close-ambient.ts"),tgui_icon28_stats=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-stats.ts"),tgui_icon28_heart=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-heart.ts"),tgui_icon28_edit=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-edit.ts"),tgui_icon28_devices=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-devices.ts"),tgui_icon28_chat=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-chat.ts"),tgui_icon28_attach=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-attach.ts"),tgui_icon28_archive=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-archive.ts"),tgui_icon28_add_circle=__webpack_require__("./projects/tgui/src/lib/icons/icon28/tgui-icon28-add-circle.ts"),tgui_icon32_profile_colored_square=__webpack_require__("./projects/tgui/src/lib/icons/icon32/tgui-icon32-profile-colored-square.ts"),tgui_icon36_backspace=__webpack_require__("./projects/tgui/src/lib/icons/icon36/tgui-icon36-backspace.ts"),icon_base_component=__webpack_require__("./projects/tgui/src/lib/icons/icon-base.component.ts");let TguiDynamicIconComponent=class TguiDynamicIconComponent{icon;iconContainer;componentRef=null;iconSizes=["12","16","20","24","28","32","36"];ngOnChanges(changes){changes.icon&&this.loadIconComponent()}loadIconComponent(){this.componentRef&&(this.componentRef.destroy(),this.componentRef=null),this.iconContainer.clear();let iconComponentName=this.formatIconComponentName(this.icon),IconComponent=icons_namespaceObject[iconComponentName];if(!IconComponent&&!this.hasSize(this.icon))for(const size of this.iconSizes)if(iconComponentName=this.toCamelCase(`tgui-icon${size}-${this.icon}`),IconComponent=icons_namespaceObject[iconComponentName],IconComponent)break;IconComponent?this.componentRef=this.iconContainer.createComponent(IconComponent):console.warn(`Icon component "${this.icon}" not found.`)}hasSize(iconName){if(iconName.startsWith("tgui-icon")&&/tgui-icon\d+/.test(iconName))return!0;if(iconName.includes("-")){return iconName.split("-").some((part=>/^\d+$/.test(part)))}return!1}formatIconComponentName(iconName){if(iconName.startsWith("tgui-icon"))return this.toCamelCase(iconName);if(iconName.includes("-")){const parts=iconName.split("-");if(/^\d+$/.test(parts[parts.length-1])){const size=parts.pop();return this.toCamelCase(`tgui-icon${size}-${parts.join("-")}`)}if(/^\d+$/.test(parts[0])){const size=parts.shift();return this.toCamelCase(`tgui-icon${size}-${parts.join("-")}`)}}return this.toCamelCase(`tgui-icon-${iconName}`)}toCamelCase(str){return str.replace(/(^|-|_)([a-z])/g,((match,separator,char)=>char.toUpperCase())).replace(/(-|_)/g,"")}static propDecorators={icon:[{type:core.Input}],iconContainer:[{type:core.ViewChild,args:["iconContainer",{read:core.ViewContainerRef,static:!0}]}]}};TguiDynamicIconComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"tgui-dynamic-icon",standalone:!0,imports:[common_module_CBrzkrmd.MD],template:"<ng-container #iconContainer></ng-container>"})],TguiDynamicIconComponent)}}]);
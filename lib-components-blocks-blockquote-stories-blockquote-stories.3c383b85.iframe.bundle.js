"use strict";(self.webpackChunktguiangular=self.webpackChunktguiangular||[]).push([[64],{"./projects/tgui/src/lib/components/blocks/blockquote/stories/blockquote.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,MultipleExamples:()=>MultipleExamples,WithComplexContent:()=>WithComplexContent,WithCustomIcon:()=>WithCustomIcon,WithLargerIcon:()=>WithLargerIcon,WithText:()=>WithText,WithTextAndComplexContent:()=>WithTextAndComplexContent,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_blockquote_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/tgui/src/lib/components/blocks/blockquote/blockquote.component.ts"),_typography_text_text_component__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./projects/tgui/src/lib/components/typography/text/text.component.ts"),_icons_dynamic_icon_component__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./projects/tgui/src/lib/icons/dynamic-icon.component.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Blocks/Blockquote",component:_blockquote_component__WEBPACK_IMPORTED_MODULE_1__.b,tags:["autodocs"],decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_blockquote_component__WEBPACK_IMPORTED_MODULE_1__.b,_typography_text_text_component__WEBPACK_IMPORTED_MODULE_2__.N,_icons_dynamic_icon_component__WEBPACK_IMPORTED_MODULE_3__.t]})],parameters:{layout:"centered"},argTypes:{icon:{control:"text",description:"The icon to display in the top right corner"},text:{control:"text",description:"Optional text to display as a headline above the content"}}},Default={args:{icon:"quote"},render:args=>({props:args,template:'\n      <tgui-blockquote [icon]="icon">\n        This is a blockquote with default styling.\n      </tgui-blockquote>\n    '})},WithText={args:{icon:"quote",text:"This is the headline text"},render:args=>({props:args,template:'\n      <tgui-blockquote [icon]="icon" [text]="text">\n        This is the content below the headline.\n      </tgui-blockquote>\n    '})},WithCustomIcon={args:{icon:"chevron",text:"Blockquote with chevron icon"},render:args=>({props:args,template:'\n      <tgui-blockquote [icon]="icon" [text]="text">\n        This is a blockquote with a custom chevron icon.\n      </tgui-blockquote>\n    '})},WithLargerIcon={args:{icon:"backspace",text:"Blockquote with larger quote icon"},render:args=>({props:args,template:'\n      <tgui-blockquote [icon]="icon" [text]="text">\n        This is a blockquote with a larger quote icon.\n      </tgui-blockquote>\n    '})},WithComplexContent={args:{icon:"quote"},render:args=>({props:args,template:'\n      <tgui-blockquote [icon]="icon">\n        <div style="padding: 8px 0;">\n          <strong>Custom content</strong>\n          <p style="margin: 4px 0 0 0;">This blockquote contains custom HTML content.</p>\n        </div>\n      </tgui-blockquote>\n    '})},WithTextAndComplexContent={args:{icon:"quote",text:"Complex content example"},render:args=>({props:args,template:'\n      <tgui-blockquote [icon]="icon" [text]="text">\n        <div style="padding: 8px 0;">\n          <strong>Custom content below the headline</strong>\n          <p style="margin: 4px 0 0 0;">This shows how to combine text headline with complex content.</p>\n        </div>\n      </tgui-blockquote>\n    '})},MultipleExamples={render:()=>({template:'\n      <div style="display: flex; flex-direction: column; gap: 16px;">\n        <tgui-blockquote icon="quote" text="Simple example with text">\n          Basic blockquote with text headline and default quote icon.\n        </tgui-blockquote>\n        \n        <tgui-blockquote icon="chevron">\n          Blockquote with only content and custom chevron icon.\n        </tgui-blockquote>\n        \n        <tgui-blockquote icon="quote" text="Complex content example">\n          <div style="padding: 4px 0;">\n            <strong>HTML content</strong>\n            <p style="margin: 4px 0 0 0;">With formatted elements</p>\n          </div>\n        </tgui-blockquote>\n      </div>\n    '})},__namedExportsOrder=["Default","WithText","WithCustomIcon","WithLargerIcon","WithComplexContent","WithTextAndComplexContent","MultipleExamples"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    icon: 'quote'\n  },\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-blockquote [icon]=\"icon\">\n        This is a blockquote with default styling.\n      </tgui-blockquote>\n    `\n  })\n}",...Default.parameters?.docs?.source}}},WithText.parameters={...WithText.parameters,docs:{...WithText.parameters?.docs,source:{originalSource:"{\n  args: {\n    icon: 'quote',\n    text: 'This is the headline text'\n  },\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-blockquote [icon]=\"icon\" [text]=\"text\">\n        This is the content below the headline.\n      </tgui-blockquote>\n    `\n  })\n}",...WithText.parameters?.docs?.source}}},WithCustomIcon.parameters={...WithCustomIcon.parameters,docs:{...WithCustomIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    icon: 'chevron',\n    text: 'Blockquote with chevron icon'\n  },\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-blockquote [icon]=\"icon\" [text]=\"text\">\n        This is a blockquote with a custom chevron icon.\n      </tgui-blockquote>\n    `\n  })\n}",...WithCustomIcon.parameters?.docs?.source}}},WithLargerIcon.parameters={...WithLargerIcon.parameters,docs:{...WithLargerIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    icon: 'backspace',\n    text: 'Blockquote with larger quote icon'\n  },\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-blockquote [icon]=\"icon\" [text]=\"text\">\n        This is a blockquote with a larger quote icon.\n      </tgui-blockquote>\n    `\n  })\n}",...WithLargerIcon.parameters?.docs?.source}}},WithComplexContent.parameters={...WithComplexContent.parameters,docs:{...WithComplexContent.parameters?.docs,source:{originalSource:'{\n  args: {\n    icon: \'quote\'\n  },\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-blockquote [icon]="icon">\n        <div style="padding: 8px 0;">\n          <strong>Custom content</strong>\n          <p style="margin: 4px 0 0 0;">This blockquote contains custom HTML content.</p>\n        </div>\n      </tgui-blockquote>\n    `\n  })\n}',...WithComplexContent.parameters?.docs?.source}}},WithTextAndComplexContent.parameters={...WithTextAndComplexContent.parameters,docs:{...WithTextAndComplexContent.parameters?.docs,source:{originalSource:'{\n  args: {\n    icon: \'quote\',\n    text: \'Complex content example\'\n  },\n  render: args => ({\n    props: args,\n    template: `\n      <tgui-blockquote [icon]="icon" [text]="text">\n        <div style="padding: 8px 0;">\n          <strong>Custom content below the headline</strong>\n          <p style="margin: 4px 0 0 0;">This shows how to combine text headline with complex content.</p>\n        </div>\n      </tgui-blockquote>\n    `\n  })\n}',...WithTextAndComplexContent.parameters?.docs?.source}}},MultipleExamples.parameters={...MultipleExamples.parameters,docs:{...MultipleExamples.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: flex; flex-direction: column; gap: 16px;">\n        <tgui-blockquote icon="quote" text="Simple example with text">\n          Basic blockquote with text headline and default quote icon.\n        </tgui-blockquote>\n        \n        <tgui-blockquote icon="chevron">\n          Blockquote with only content and custom chevron icon.\n        </tgui-blockquote>\n        \n        <tgui-blockquote icon="quote" text="Complex content example">\n          <div style="padding: 4px 0;">\n            <strong>HTML content</strong>\n            <p style="margin: 4px 0 0 0;">With formatted elements</p>\n          </div>\n        </tgui-blockquote>\n      </div>\n    `\n  })\n}',...MultipleExamples.parameters?.docs?.source}}}}}]);